// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('SquareVerifier');
// - use the contents from proof.json generated from zokrates steps
var verifierProof = require('../../zokrates/code/square/proof.json');

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract('Test Verifier', accounts => {

    const account_one = accounts[0];
    const account_two = accounts[1];

    describe('Verifier', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new();

        })

        it('Test verification with correct proof', async function () {
            let result = await this.contract.verifyTx(
                { a: verifierProof.proof.a, b: verifierProof.proof.b, c: verifierProof.proof.c},
                verifierProof.inputs,
                { from: account_one }
            );
            assert.equal(result, true, "Verification failed despite using contents from proof.json.");
        })

        it('Test verification with incorrect proof', async function () {
            let result = await this.contract.verifyTx(
                { a: verifierProof.proof.c, b: verifierProof.proof.b, c: verifierProof.proof.c},
                verifierProof.inputs,
                { from: account_one }
            );
            assert.equal(result, false, "Verification should have failed but succeeded.");
        })

    });
})